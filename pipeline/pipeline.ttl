@prefix rdfc: <https://w3id.org/rdf-connect#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix ex: <http://example.org/>.


### Import runners and processors
<> owl:imports <./node_modules/@rdfc/js-runner/index.ttl>.
<> owl:imports <https://javadoc.jitpack.io/com/github/rdf-connect/jvm-runner/runner/master-SNAPSHOT/runner-master-SNAPSHOT-index.jar>.

<> owl:imports <./node_modules/@rdfc/http-utils-processor-ts/processors.ttl>.
<> owl:imports <./node_modules/@rdfc/log-processor-ts/processor.ttl>.
<> owl:imports <./node_modules/@rdfc/file-utils-processors-ts/processors.ttl>.
<> owl:imports <./build/plugins/rml-processor-jvm-master-SNAPSHOT-all.jar>.
<> owl:imports <./node_modules/@rdfc/shacl-processor-ts/processors.ttl>.


### Define the channels
<json> a rdfc:Reader, rdfc:Writer.
<mappingData> a rdfc:Reader, rdfc:Writer.
<rdf> a rdfc:Reader, rdfc:Writer.
<validated> a rdfc:Reader, rdfc:Writer.
<report> a rdfc:Reader, rdfc:Writer.


### Define the pipeline
<> a rdfc:Pipeline;
   rdfc:consistsOf [
       rdfc:instantiates rdfc:NodeRunner;
       rdfc:processor <fetcher>, <logger>, <mappingReader>, <validator>, <reporter>;
   ], [
       rdfc:instantiates rdfc:JvmRunner;
       rdfc:processor <mapper>;
   ].


### Define the processors
# Processor to fetch data from a JSON API
<fetcher> a rdfc:HttpFetch;
    rdfc:url "https://dataset.api.hub.geosphere.at/v1/station/current/tawes-v1-10min?parameters=TL,RR&station_ids=11035";
    rdfc:writer <json>.

# Processor to read and stream out the RML mappings
<mappingReader> a rdfc:GlobRead;
    rdfc:glob <./resources/mapping.rml.ttl>;
    rdfc:output <mappingData>;
    rdfc:closeOnEnd true.

# Processor to do the RML mapping
<mapper> a rdfc:RmlMapper;
    rdfc:mappings <mappingData>;
    rdfc:source [
        rdfc:triggers true;
        rdfc:reader <json>;
        rdfc:mappingId ex:source1;
    ];
    rdfc:defaultTarget [
        rdfc:writer <rdf>;
        rdfc:format "turtle";
    ].

# Processor to validate the output RDF with SHACL
<validator> a rdfc:Validate;
    rdfc:shaclPath "./resources/shacl-shape.ttl";
    rdfc:incoming <rdf>;
    rdfc:outgoing <validated>;
    rdfc:report <report>;
    rdfc:validationIsFatal false;
    rdfc:mime "text/turtle".

# Processor to log the SHACL report
<reporter> a rdfc:LogProcessorJs;
      rdfc:reader <report>;
      rdfc:level "warn";
      rdfc:label "report".

# Processor to log the output
<logger> a rdfc:LogProcessorJs;
      rdfc:reader <validated>;
      rdfc:level "info";
      rdfc:label "output".
